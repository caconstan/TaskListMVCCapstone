#pragma checksum "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "86cf426c238fb1eebe64b53667dc9e48e6753159"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_TaskList_Index), @"mvc.1.0.view", @"/Views/TaskList/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\_ViewImports.cshtml"
using TaskListLab;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\_ViewImports.cshtml"
using TaskListLab.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"86cf426c238fb1eebe64b53667dc9e48e6753159", @"/Views/TaskList/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"afa9b7680a15bedfc6852fd0e5e62fbe1e7ef9bb", @"/Views/_ViewImports.cshtml")]
    public class Views_TaskList_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<TaskListLab.Models.TaskList>>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!doctype html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86cf426c238fb1eebe64b53667dc9e48e67531593310", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 5 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
      
        ViewData["Title"] = "User Task List";
    

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
    <style>
        /* Style the buttons */
        .btn {
            border: none;
            outline: none;
            padding: 12px 16px;
            background-color: #f1f1f1;
            cursor: pointer;
        }

        /* Add a light grey background on mouse-over */
        .btn:hover {
            background-color: #ddd;
        }

        /* Add a dark background to the active button */
        .btn.active {
            background-color: #666;
            color: white;
        }
    </style>

    <script>
    
        function ConfirmDelete(taskId) {
            if (true === confirm(""are you sure you want to delete task #"" + taskId + ""?"")) {
                document.location = ""/TaskList/DeleteTask?taskId="" + taskId;
                return true;
            }
        }

        function ToggleComplete(taskId, newstatus) {
            if (true === confirm(""are you sure you want to mark task #"" + taskId + "" as "" + newstatus + ""?"")) {
                document.loca");
                WriteLiteral(@"tion = ""/TaskList/ToggleComplete?taskId="" + taskId;
                return true;
            }
        }

        var completed = """";// maintains state of our completed status buttons

        function filterRows(button) {
            // modified original code from:
            // https://www.w3schools.com/howto/howto_js_filter_table.asp

            if (button) {
                completed = button.value;
                // Add active class to the current control button (highlight it)
                var current = document.getElementsByClassName(""active"");
                current[0].className = current[0].className.replace("" active"", """");
                button.className += "" active"";
            }

            // Declare variables
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById(""descFilter"");
            filter = input.value.toUpperCase();
            table = document.getElementById(""myTable"");
            tr = table.getElementsBy");
                WriteLiteral(@"TagName(""tr"");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 1; i < tr.length; i++) {
                td1 = tr[i].getElementsByTagName(""td"")[1];// filter on the description field
                td3 = tr[i].getElementsByTagName(""td"")[3];// filter on the completed column
                txtValue1 = td1.innerText.toUpperCase().indexOf(filter);
                txtValue3 = td3.innerText.indexOf(completed);
                if (txtValue3 > -1 && txtValue1 > -1) {
                    tr[i].style.display = """";
                } else {
                    tr[i].style.display = ""none"";
                }
            }
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86cf426c238fb1eebe64b53667dc9e48e67531597423", async() => {
                WriteLiteral(@"

    <h1>Your Task List</h1>

    <p>
        <div id=""toolbar"">
            <span style=""float: left"">
                <button onclick=""document.location = '/TaskList/CreateTask';"">Create New Task</button>
                <input size=""45"" type=""text"" id=""descFilter"" onkeyup=""filterRows('')"" placeholder=""Enter text to filter tasks by description..."">
            </span>

            <span style=""float: right"" id=""myBtnContainer"">
                <button class=""btn active"" onclick=""filterRows(this)"" value=""e"">Show all</button>
                <button class=""btn"" onclick=""filterRows(this)"" value=""T"">Show Only Completed</button>
                <button class=""btn"" onclick=""filterRows(this)"" value=""F"">Show Only Uncompleted</button>
            </span>
        </div>
    </p>
    <table id=""myTable"" class=""table"">
        <tr>
            <th>Task ID</th>
            <th>Description</th>
            <th>Due Date</th>
            <th>Complete</th>
            <th>User</th>
            <th>");
                WriteLiteral("</th>\r\n        </tr>\r\n\r\n");
#nullable restore
#line 111 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
         if (@Model.Count() == 0)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral("            <tr><td colspan=\"6\"><i>Your Task List is currently empty. Use the \"Create Task\" button to add new tasks.</i></td></tr>\r\n");
#nullable restore
#line 114 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n");
#nullable restore
#line 116 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
         foreach (var task in Model)
        {

#line default
#line hidden
#nullable disable
                WriteLiteral("            <tr>\r\n                <td>");
#nullable restore
#line 119 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
               Write(task.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 120 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
               Write(task.Description);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 121 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
               Write(task.DueDate.ToString("MM/dd/yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 122 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
               Write(task.Complete);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 123 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
               Write(task.UserId);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                <td>\r\n");
#nullable restore
#line 125 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
                     if (task.Complete)
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        <input type=button value=\"Mark Not Complete\"");
                BeginWriteAttribute("onclick", " onclick=\"", 4612, "\"", 4662, 5);
                WriteAttributeValue("", 4622, "ToggleComplete(", 4622, 15, true);
#nullable restore
#line 127 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
WriteAttributeValue("", 4637, task.Id, 4637, 8, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4645, ",", 4645, 1, true);
                WriteAttributeValue(" ", 4646, "\'Not", 4647, 5, true);
                WriteAttributeValue(" ", 4651, "Complete\')", 4652, 11, true);
                EndWriteAttribute();
                WriteLiteral(" />\r\n");
#nullable restore
#line 128 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                        <input type=button value=\"Mark Complete\"");
                BeginWriteAttribute("onclick", " onclick=\"", 4804, "\"", 4850, 4);
                WriteAttributeValue("", 4814, "ToggleComplete(", 4814, 15, true);
#nullable restore
#line 131 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
WriteAttributeValue("", 4829, task.Id, 4829, 8, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4837, ",", 4837, 1, true);
                WriteAttributeValue(" ", 4838, "\'Complete\')", 4839, 12, true);
                EndWriteAttribute();
                WriteLiteral(" />\r\n");
#nullable restore
#line 132 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    <input type=button value=\"Delete Task\"");
                BeginWriteAttribute("onclick", " onclick=\"", 4939, "\"", 4972, 3);
                WriteAttributeValue("", 4949, "ConfirmDelete(", 4949, 14, true);
#nullable restore
#line 134 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
WriteAttributeValue("", 4963, task.Id, 4963, 8, false);

#line default
#line hidden
#nullable disable
                WriteAttributeValue("", 4971, ")", 4971, 1, true);
                EndWriteAttribute();
                WriteLiteral(" />\r\n                </td>\r\n            </tr>\r\n");
#nullable restore
#line 137 "C:\Users\Chris\Documents\GC bootcamp\TaskListLab\TaskListLab\Views\TaskList\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("    </table>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<TaskListLab.Models.TaskList>> Html { get; private set; }
    }
}
#pragma warning restore 1591
